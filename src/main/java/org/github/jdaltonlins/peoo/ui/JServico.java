/*
* MIT License
* 
* Copyright (c) 2021 Dalton Lins
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
* 
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
 */
package org.github.jdaltonlins.peoo.ui;

import java.awt.event.ItemEvent;
import java.util.function.Consumer;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Dalton Lins
 */
public class JServico extends Backable {

    private Consumer<String> selectService;

    /**
     * Creates new form JServico
     *
     * @param selectService
     */
    public JServico(Consumer<String> selectService) {
        this(null, selectService);
    }

    /**
     * w
     * Creates new form JServico
     *
     * @param frame
     * @param selectService
     */
    public JServico(JFrame frame, Consumer<String> selectService) {
        super(frame);
        initComponents();
        this.selectService = selectService;
        this.active();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        content = new javax.swing.JPanel();
        hidratacaoCheck = new javax.swing.JCheckBox();
        luzesCheck = new javax.swing.JCheckBox();
        cortarCheck = new javax.swing.JCheckBox();
        manicuiriCheck = new javax.swing.JCheckBox();
        outrosCheck = new javax.swing.JCheckBox();
        disivor = new javax.swing.JSeparator();
        scrollCustom = new javax.swing.JScrollPane();
        inputCustom = new javax.swing.JTextArea();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        content.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        hidratacaoCheck.setText("Hitratação Compreta");

        luzesCheck.setText("Luizes");

        cortarCheck.setText("Cortar");

        manicuiriCheck.setText("Manicuri");

        outrosCheck.setText("Outros");
        outrosCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCustom(evt);
            }
        });

        disivor.setOrientation(javax.swing.SwingConstants.VERTICAL);

        inputCustom.setColumns(20);
        inputCustom.setRows(5);
        scrollCustom.setViewportView(inputCustom);

        okBtn.setText("Ok");
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onOk(evt);
            }
        });

        cancelBtn.setText("Cancelar");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCancel(evt);
            }
        });

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hidratacaoCheck)
                    .addComponent(luzesCheck)
                    .addComponent(cortarCheck)
                    .addComponent(manicuiriCheck)
                    .addComponent(outrosCheck))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(disivor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentLayout.createSequentialGroup()
                        .addComponent(okBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelBtn))
                    .addComponent(scrollCustom, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE))
                .addContainerGap())
        );
        contentLayout.setVerticalGroup(
            contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(contentLayout.createSequentialGroup()
                        .addComponent(hidratacaoCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(luzesCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cortarCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(manicuiriCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(outrosCheck))
                    .addComponent(disivor)
                    .addGroup(contentLayout.createSequentialGroup()
                        .addComponent(scrollCustom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(okBtn)
                            .addComponent(cancelBtn))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void onOk(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onOk
        boolean any = false;
        if (this.outrosCheck.isSelected()) {
            if (this.inputCustom.getText().trim().length() == 0) {
                if (JOptionPane.showConfirmDialog(this, "Você precisa preencher o campo de texto!", "Ops! Parece que você esqueceu de algo.", JOptionPane.OK_OPTION, JOptionPane.WARNING_MESSAGE) != JOptionPane.OK_OPTION) {
                    this.dispose();
                }
                return;
            } else {
                String[] content = inputCustom.getText().split("\n");
                for (String s : content) {
                    this.selectService.accept(s);
                }
                any = true;
            }
        }

        if (this.cortarCheck.isSelected()) {
            this.selectService.accept("Cortar as Madeixa de Cabelo");
            any = true;
        }
        if (this.hidratacaoCheck.isSelected()) {
            this.selectService.accept("Hitratação nas Madeixa de Cabelo");
            any = true;
        }
        if (this.luzesCheck.isSelected()) {
            this.selectService.accept("Luizes nas Madeixa de Cabelo");
            any = true;
        }
        if (this.manicuiriCheck.isSelected()) {
            this.selectService.accept("Maniacuiri nas Mãus e nois Péis");
            any = true;
        }
        if (!any && JOptionPane.showConfirmDialog(this, "Você precisa selecionar um serviço!", "Ops! Parece que você esqueceu de algo.", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE) == JOptionPane.OK_OPTION) {
            return;
        }
        this.dispose();
    }//GEN-LAST:event_onOk

    private void onCancel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCancel
        this.dispose();
    }//GEN-LAST:event_onCancel

    private void onCustom(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCustom
        this.inputCustom.setEnabled(this.outrosCheck.isSelected());
    }//GEN-LAST:event_onCustom

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JPanel content;
    private javax.swing.JCheckBox cortarCheck;
    private javax.swing.JSeparator disivor;
    private javax.swing.JCheckBox hidratacaoCheck;
    private javax.swing.JTextArea inputCustom;
    private javax.swing.JCheckBox luzesCheck;
    private javax.swing.JCheckBox manicuiriCheck;
    private javax.swing.JButton okBtn;
    private javax.swing.JCheckBox outrosCheck;
    private javax.swing.JScrollPane scrollCustom;
    // End of variables declaration//GEN-END:variables
}
