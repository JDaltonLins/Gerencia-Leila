/*
* MIT License
* 
* Copyright (c) 2021 Dalton Lins
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
* 
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/
package org.github.jdaltonlins.peoo.ui;

import com.github.weisj.darklaf.LafManager;
import com.github.weisj.darklaf.theme.*;
import java.awt.Image;
import java.util.Arrays;
import java.util.stream.Collectors;
import javax.swing.ImageIcon;
import org.github.jdaltonlins.peoo.utils.Manager;

/**
 *
 * @author Dalton
 */
public class JMenu extends Backable {

    public static final Theme[] THEMES = {
        new IntelliJTheme(),
        new DarculaTheme(),
        new HighContrastDarkTheme(),
        new HighContrastLightTheme(),
        new OneDarkTheme(),
        new SolarizedDarkTheme(),
        new SolarizedLightTheme()
    };
    
    /**
     * Creates new form JMenu
     */
    public JMenu() {
        super(null);
        initComponents();
        active();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelImg = new javax.swing.JLabel();
        contentClient = new javax.swing.JPanel();
        showClient = new javax.swing.JButton();
        newClient = new javax.swing.JButton();
        contentService = new javax.swing.JPanel();
        showService = new javax.swing.JButton();
        newService = new javax.swing.JButton();
        labelnfo = new javax.swing.JLabel();
        themeSelect = new javax.swing.JComboBox<>();
        titleTheme = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu - Cabeleleila Leila");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                onClose(evt);
            }
        });

        panelImg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelImg.setIcon(new ImageIcon(new ImageIcon(getClass().getResource("/assets/logo.png")).getImage().getScaledInstance((int)(270*1.6), (int)(119.475*1.6), Image.SCALE_DEFAULT)));
        panelImg.setPreferredSize(new java.awt.Dimension(500, 173));

        contentClient.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clientes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP));

        showClient.setText("Ver Clientes");
        showClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showClients(evt);
            }
        });

        newClient.setText("Cadastrar Clientes");
        newClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newClient(evt);
            }
        });

        javax.swing.GroupLayout contentClientLayout = new javax.swing.GroupLayout(contentClient);
        contentClient.setLayout(contentClientLayout);
        contentClientLayout.setHorizontalGroup(
            contentClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentClientLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showClient, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentClientLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(newClient, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        contentClientLayout.setVerticalGroup(
            contentClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentClientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showClient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newClient)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        contentService.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Clientes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP));

        showService.setText("Ver Serviços");
        showService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showServices(evt);
            }
        });

        newService.setText("Cadastrar Serviços");
        newService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newService(evt);
            }
        });

        javax.swing.GroupLayout contentServiceLayout = new javax.swing.GroupLayout(contentService);
        contentService.setLayout(contentServiceLayout);
        contentServiceLayout.setHorizontalGroup(
            contentServiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentServiceLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentServiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showService, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, contentServiceLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(newService, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        contentServiceLayout.setVerticalGroup(
            contentServiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentServiceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showService)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newService)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelnfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelnfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/mini-logo.png"))); // NOI18N
        labelnfo.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        themeSelect.setModel(new javax.swing.DefaultComboBoxModel<>(Arrays.stream(THEMES).map(Theme::getName).collect(Collectors.toList()).toArray(new String[0])));
        themeSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onChangeTheme(evt);
            }
        });

        titleTheme.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleTheme.setText("Tema atual");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(titleTheme, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(themeSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelnfo, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contentService, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contentClient, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(panelImg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelImg, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(labelnfo, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(themeSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(titleTheme)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(contentService, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contentClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newClient(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newClient
        new JNovoCliente(this);
    }//GEN-LAST:event_newClient

    private void showClients(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showClients
        new JTabela(this, true);
    }//GEN-LAST:event_showClients

    private void showServices(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showServices
        new JTabela(this, false);
    }//GEN-LAST:event_showServices

    private void newService(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newService
        new JNovoServico(this);
    }//GEN-LAST:event_newService

    private void onClose(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_onClose
        Manager.saveFromCache();
    }//GEN-LAST:event_onClose

    private void onChangeTheme(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onChangeTheme
        Theme theme = THEMES[this.themeSelect.getSelectedIndex()];
        LafManager.setTheme(theme);
        LafManager.install();
        System.out.println("[UI] Tema alterado para " + theme.getName());
        Manager.setSelectedTheme(this.themeSelect.getSelectedIndex());
    }//GEN-LAST:event_onChangeTheme

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel contentClient;
    private javax.swing.JPanel contentService;
    private javax.swing.JLabel labelnfo;
    private javax.swing.JButton newClient;
    private javax.swing.JButton newService;
    private javax.swing.JLabel panelImg;
    private javax.swing.JButton showClient;
    private javax.swing.JButton showService;
    private javax.swing.JComboBox<String> themeSelect;
    private javax.swing.JLabel titleTheme;
    // End of variables declaration//GEN-END:variables
}
